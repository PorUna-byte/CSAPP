
linkbomb2：     文件格式 elf32-i386


Disassembly of section .init:

00001000 <_init>:
    1000:	f3 0f 1e fb          	endbr32 
    1004:	53                   	push   %ebx
    1005:	83 ec 08             	sub    $0x8,%esp
    1008:	e8 b3 00 00 00       	call   10c0 <__x86.get_pc_thunk.bx>
    100d:	81 c3 c7 2f 00 00    	add    $0x2fc7,%ebx
    1013:	8b 83 20 00 00 00    	mov    0x20(%ebx),%eax
    1019:	85 c0                	test   %eax,%eax
    101b:	74 02                	je     101f <_init+0x1f>
    101d:	ff d0                	call   *%eax
    101f:	83 c4 08             	add    $0x8,%esp
    1022:	5b                   	pop    %ebx
    1023:	c3                   	ret    

Disassembly of section .plt:

00001030 <.plt>:
    1030:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
    1036:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
    103c:	00 00                	add    %al,(%eax)
	...

00001040 <strcmp@plt>:
    1040:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
    1046:	68 00 00 00 00       	push   $0x0
    104b:	e9 e0 ff ff ff       	jmp    1030 <.plt>

00001050 <puts@plt>:
    1050:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
    1056:	68 08 00 00 00       	push   $0x8
    105b:	e9 d0 ff ff ff       	jmp    1030 <.plt>

00001060 <__libc_start_main@plt>:
    1060:	ff a3 14 00 00 00    	jmp    *0x14(%ebx)
    1066:	68 10 00 00 00       	push   $0x10
    106b:	e9 c0 ff ff ff       	jmp    1030 <.plt>

Disassembly of section .plt.got:

00001070 <__cxa_finalize@plt>:
    1070:	ff a3 1c 00 00 00    	jmp    *0x1c(%ebx)
    1076:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00001080 <_start>:
    1080:	f3 0f 1e fb          	endbr32 
    1084:	31 ed                	xor    %ebp,%ebp
    1086:	5e                   	pop    %esi
    1087:	89 e1                	mov    %esp,%ecx
    1089:	83 e4 f0             	and    $0xfffffff0,%esp
    108c:	50                   	push   %eax
    108d:	54                   	push   %esp
    108e:	52                   	push   %edx
    108f:	e8 22 00 00 00       	call   10b6 <_start+0x36>
    1094:	81 c3 40 2f 00 00    	add    $0x2f40,%ebx
    109a:	8d 83 2c d3 ff ff    	lea    -0x2cd4(%ebx),%eax
    10a0:	50                   	push   %eax
    10a1:	8d 83 bc d2 ff ff    	lea    -0x2d44(%ebx),%eax
    10a7:	50                   	push   %eax
    10a8:	51                   	push   %ecx
    10a9:	56                   	push   %esi
    10aa:	ff b3 24 00 00 00    	pushl  0x24(%ebx)
    10b0:	e8 ab ff ff ff       	call   1060 <__libc_start_main@plt>
    10b5:	f4                   	hlt    
    10b6:	8b 1c 24             	mov    (%esp),%ebx
    10b9:	c3                   	ret    
    10ba:	66 90                	xchg   %ax,%ax
    10bc:	66 90                	xchg   %ax,%ax
    10be:	66 90                	xchg   %ax,%ax

000010c0 <__x86.get_pc_thunk.bx>:
    10c0:	8b 1c 24             	mov    (%esp),%ebx
    10c3:	c3                   	ret    
    10c4:	66 90                	xchg   %ax,%ax
    10c6:	66 90                	xchg   %ax,%ax
    10c8:	66 90                	xchg   %ax,%ax
    10ca:	66 90                	xchg   %ax,%ax
    10cc:	66 90                	xchg   %ax,%ax
    10ce:	66 90                	xchg   %ax,%ax

000010d0 <deregister_tm_clones>:
    10d0:	e8 e4 00 00 00       	call   11b9 <__x86.get_pc_thunk.dx>
    10d5:	81 c2 ff 2e 00 00    	add    $0x2eff,%edx
    10db:	8d 8a 38 00 00 00    	lea    0x38(%edx),%ecx
    10e1:	8d 82 38 00 00 00    	lea    0x38(%edx),%eax
    10e7:	39 c8                	cmp    %ecx,%eax
    10e9:	74 1d                	je     1108 <deregister_tm_clones+0x38>
    10eb:	8b 82 18 00 00 00    	mov    0x18(%edx),%eax
    10f1:	85 c0                	test   %eax,%eax
    10f3:	74 13                	je     1108 <deregister_tm_clones+0x38>
    10f5:	55                   	push   %ebp
    10f6:	89 e5                	mov    %esp,%ebp
    10f8:	83 ec 14             	sub    $0x14,%esp
    10fb:	51                   	push   %ecx
    10fc:	ff d0                	call   *%eax
    10fe:	83 c4 10             	add    $0x10,%esp
    1101:	c9                   	leave  
    1102:	c3                   	ret    
    1103:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1107:	90                   	nop
    1108:	c3                   	ret    
    1109:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00001110 <register_tm_clones>:
    1110:	e8 a4 00 00 00       	call   11b9 <__x86.get_pc_thunk.dx>
    1115:	81 c2 bf 2e 00 00    	add    $0x2ebf,%edx
    111b:	55                   	push   %ebp
    111c:	89 e5                	mov    %esp,%ebp
    111e:	53                   	push   %ebx
    111f:	8d 8a 38 00 00 00    	lea    0x38(%edx),%ecx
    1125:	8d 82 38 00 00 00    	lea    0x38(%edx),%eax
    112b:	83 ec 04             	sub    $0x4,%esp
    112e:	29 c8                	sub    %ecx,%eax
    1130:	89 c3                	mov    %eax,%ebx
    1132:	c1 e8 1f             	shr    $0x1f,%eax
    1135:	c1 fb 02             	sar    $0x2,%ebx
    1138:	01 d8                	add    %ebx,%eax
    113a:	d1 f8                	sar    %eax
    113c:	74 14                	je     1152 <register_tm_clones+0x42>
    113e:	8b 92 28 00 00 00    	mov    0x28(%edx),%edx
    1144:	85 d2                	test   %edx,%edx
    1146:	74 0a                	je     1152 <register_tm_clones+0x42>
    1148:	83 ec 08             	sub    $0x8,%esp
    114b:	50                   	push   %eax
    114c:	51                   	push   %ecx
    114d:	ff d2                	call   *%edx
    114f:	83 c4 10             	add    $0x10,%esp
    1152:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    1155:	c9                   	leave  
    1156:	c3                   	ret    
    1157:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    115e:	66 90                	xchg   %ax,%ax

00001160 <__do_global_dtors_aux>:
    1160:	f3 0f 1e fb          	endbr32 
    1164:	55                   	push   %ebp
    1165:	89 e5                	mov    %esp,%ebp
    1167:	53                   	push   %ebx
    1168:	e8 53 ff ff ff       	call   10c0 <__x86.get_pc_thunk.bx>
    116d:	81 c3 67 2e 00 00    	add    $0x2e67,%ebx
    1173:	83 ec 04             	sub    $0x4,%esp
    1176:	80 bb 38 00 00 00 00 	cmpb   $0x0,0x38(%ebx)
    117d:	75 27                	jne    11a6 <__do_global_dtors_aux+0x46>
    117f:	8b 83 1c 00 00 00    	mov    0x1c(%ebx),%eax
    1185:	85 c0                	test   %eax,%eax
    1187:	74 11                	je     119a <__do_global_dtors_aux+0x3a>
    1189:	83 ec 0c             	sub    $0xc,%esp
    118c:	ff b3 30 00 00 00    	pushl  0x30(%ebx)
    1192:	e8 d9 fe ff ff       	call   1070 <__cxa_finalize@plt>
    1197:	83 c4 10             	add    $0x10,%esp
    119a:	e8 31 ff ff ff       	call   10d0 <deregister_tm_clones>
    119f:	c6 83 38 00 00 00 01 	movb   $0x1,0x38(%ebx)
    11a6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    11a9:	c9                   	leave  
    11aa:	c3                   	ret    
    11ab:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    11af:	90                   	nop

000011b0 <frame_dummy>:
    11b0:	f3 0f 1e fb          	endbr32 
    11b4:	e9 57 ff ff ff       	jmp    1110 <register_tm_clones>

000011b9 <__x86.get_pc_thunk.dx>:
    11b9:	8b 14 24             	mov    (%esp),%edx
    11bc:	c3                   	ret    

000011bd <main>:
    11bd:	8d 4c 24 04          	lea    0x4(%esp),%ecx
    11c1:	83 e4 f0             	and    $0xfffffff0,%esp
    11c4:	ff 71 fc             	pushl  -0x4(%ecx)
    11c7:	55                   	push   %ebp
    11c8:	89 e5                	mov    %esp,%ebp
    11ca:	53                   	push   %ebx
    11cb:	51                   	push   %ecx
    11cc:	e8 40 00 00 00       	call   1211 <__x86.get_pc_thunk.ax>
    11d1:	05 03 2e 00 00       	add    $0x2e03,%eax
    11d6:	8d 90 34 00 00 00    	lea    0x34(%eax),%edx
    11dc:	8b 12                	mov    (%edx),%edx
    11de:	85 d2                	test   %edx,%edx
    11e0:	74 0c                	je     11ee <main+0x31>
    11e2:	8d 80 34 00 00 00    	lea    0x34(%eax),%eax
    11e8:	8b 00                	mov    (%eax),%eax
    11ea:	ff d0                	call   *%eax
    11ec:	eb 14                	jmp    1202 <main+0x45>
    11ee:	83 ec 0c             	sub    $0xc,%esp
    11f1:	8d 90 34 e0 ff ff    	lea    -0x1fcc(%eax),%edx
    11f7:	52                   	push   %edx
    11f8:	89 c3                	mov    %eax,%ebx
    11fa:	e8 51 fe ff ff       	call   1050 <puts@plt>
    11ff:	83 c4 10             	add    $0x10,%esp
    1202:	b8 00 00 00 00       	mov    $0x0,%eax
    1207:	8d 65 f8             	lea    -0x8(%ebp),%esp
    120a:	59                   	pop    %ecx
    120b:	5b                   	pop    %ebx
    120c:	5d                   	pop    %ebp
    120d:	8d 61 fc             	lea    -0x4(%ecx),%esp
    1210:	c3                   	ret    

00001211 <__x86.get_pc_thunk.ax>:
    1211:	8b 04 24             	mov    (%esp),%eax
    1214:	c3                   	ret    

00001215 <vNtFRHjh>:
    1215:	55                   	push   %ebp
    1216:	89 e5                	mov    %esp,%ebp
    1218:	53                   	push   %ebx
    1219:	83 ec 04             	sub    $0x4,%esp
    121c:	e8 9f fe ff ff       	call   10c0 <__x86.get_pc_thunk.bx>
    1221:	81 c3 b3 2d 00 00    	add    $0x2db3,%ebx
    1227:	83 ec 08             	sub    $0x8,%esp
    122a:	8d 83 a8 e0 ff ff    	lea    -0x1f58(%ebx),%eax
    1230:	50                   	push   %eax
    1231:	ff 75 08             	pushl  0x8(%ebp)
    1234:	e8 07 fe ff ff       	call   1040 <strcmp@plt>
    1239:	83 c4 10             	add    $0x10,%esp
    123c:	85 c0                	test   %eax,%eax
    123e:	75 10                	jne    1250 <vNtFRHjh+0x3b>
    1240:	83 ec 0c             	sub    $0xc,%esp
    1243:	ff 75 08             	pushl  0x8(%ebp)
    1246:	e8 05 fe ff ff       	call   1050 <puts@plt>
    124b:	83 c4 10             	add    $0x10,%esp
    124e:	eb 01                	jmp    1251 <vNtFRHjh+0x3c>
    1250:	90                   	nop
    1251:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    1254:	c9                   	leave  
    1255:	c3                   	ret    

00001256 <do_phase>:
    1256:	55                   	push   %ebp
    1257:	89 e5                	mov    %esp,%ebp
    1259:	e8 b3 ff ff ff       	call   1211 <__x86.get_pc_thunk.ax>
    125e:	05 76 2d 00 00       	add    $0x2d76,%eax
    1263:	90                   	nop
    1264:	90                   	nop
    1265:	90                   	nop
    1266:	90                   	nop
    1267:	90                   	nop
    1268:	90                   	nop
    1269:	90                   	nop
    126a:	90                   	nop
    126b:	90                   	nop
    126c:	90                   	nop
    126d:	90                   	nop
    126e:	90                   	nop
    126f:	90                   	nop
    1270:	90                   	nop
    1271:	90                   	nop
    1272:	90                   	nop
    1273:	90                   	nop
    1274:	90                   	nop
    1275:	90                   	nop
    1276:	90                   	nop
    1277:	90                   	nop
    1278:	90                   	nop
    1279:	90                   	nop
    127a:	90                   	nop
    127b:	90                   	nop
    127c:	90                   	nop
    127d:	90                   	nop
    127e:	90                   	nop
    127f:	90                   	nop
    1280:	90                   	nop
    1281:	90                   	nop
    1282:	90                   	nop
    1283:	90                   	nop
    1284:	5d                   	pop    %ebp
    1285:	c3                   	ret    
    1286:	66 90                	xchg   %ax,%ax
    1288:	66 90                	xchg   %ax,%ax
    128a:	66 90                	xchg   %ax,%ax
    128c:	66 90                	xchg   %ax,%ax
    128e:	66 90                	xchg   %ax,%ax

00001290 <__libc_csu_init>:
    1290:	f3 0f 1e fb          	endbr32 
    1294:	55                   	push   %ebp
    1295:	e8 6b 00 00 00       	call   1305 <__x86.get_pc_thunk.bp>
    129a:	81 c5 3a 2d 00 00    	add    $0x2d3a,%ebp
    12a0:	57                   	push   %edi
    12a1:	56                   	push   %esi
    12a2:	53                   	push   %ebx
    12a3:	83 ec 0c             	sub    $0xc,%esp
    12a6:	89 eb                	mov    %ebp,%ebx
    12a8:	8b 7c 24 28          	mov    0x28(%esp),%edi
    12ac:	e8 4f fd ff ff       	call   1000 <_init>
    12b1:	8d 9d 04 ff ff ff    	lea    -0xfc(%ebp),%ebx
    12b7:	8d 85 00 ff ff ff    	lea    -0x100(%ebp),%eax
    12bd:	29 c3                	sub    %eax,%ebx
    12bf:	c1 fb 02             	sar    $0x2,%ebx
    12c2:	74 29                	je     12ed <__libc_csu_init+0x5d>
    12c4:	31 f6                	xor    %esi,%esi
    12c6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    12cd:	8d 76 00             	lea    0x0(%esi),%esi
    12d0:	83 ec 04             	sub    $0x4,%esp
    12d3:	57                   	push   %edi
    12d4:	ff 74 24 2c          	pushl  0x2c(%esp)
    12d8:	ff 74 24 2c          	pushl  0x2c(%esp)
    12dc:	ff 94 b5 00 ff ff ff 	call   *-0x100(%ebp,%esi,4)
    12e3:	83 c6 01             	add    $0x1,%esi
    12e6:	83 c4 10             	add    $0x10,%esp
    12e9:	39 f3                	cmp    %esi,%ebx
    12eb:	75 e3                	jne    12d0 <__libc_csu_init+0x40>
    12ed:	83 c4 0c             	add    $0xc,%esp
    12f0:	5b                   	pop    %ebx
    12f1:	5e                   	pop    %esi
    12f2:	5f                   	pop    %edi
    12f3:	5d                   	pop    %ebp
    12f4:	c3                   	ret    
    12f5:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    12fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00001300 <__libc_csu_fini>:
    1300:	f3 0f 1e fb          	endbr32 
    1304:	c3                   	ret    

00001305 <__x86.get_pc_thunk.bp>:
    1305:	8b 2c 24             	mov    (%esp),%ebp
    1308:	c3                   	ret    

Disassembly of section .fini:

0000130c <_fini>:
    130c:	f3 0f 1e fb          	endbr32 
    1310:	53                   	push   %ebx
    1311:	83 ec 08             	sub    $0x8,%esp
    1314:	e8 a7 fd ff ff       	call   10c0 <__x86.get_pc_thunk.bx>
    1319:	81 c3 bb 2c 00 00    	add    $0x2cbb,%ebx
    131f:	83 c4 08             	add    $0x8,%esp
    1322:	5b                   	pop    %ebx
    1323:	c3                   	ret    
