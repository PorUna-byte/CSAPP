
linkbomb4：     文件格式 elf32-i386


Disassembly of section .init:

00001000 <_init>:
    1000:	f3 0f 1e fb          	endbr32 
    1004:	53                   	push   %ebx
    1005:	83 ec 08             	sub    $0x8,%esp
    1008:	e8 c3 00 00 00       	call   10d0 <__x86.get_pc_thunk.bx>
    100d:	81 c3 c3 2f 00 00    	add    $0x2fc3,%ebx
    1013:	8b 83 24 00 00 00    	mov    0x24(%ebx),%eax
    1019:	85 c0                	test   %eax,%eax
    101b:	74 02                	je     101f <_init+0x1f>
    101d:	ff d0                	call   *%eax
    101f:	83 c4 08             	add    $0x8,%esp
    1022:	5b                   	pop    %ebx
    1023:	c3                   	ret    

Disassembly of section .plt:

00001030 <.plt>:
    1030:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
    1036:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
    103c:	00 00                	add    %al,(%eax)
	...

00001040 <__stack_chk_fail@plt>:
    1040:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
    1046:	68 00 00 00 00       	push   $0x0
    104b:	e9 e0 ff ff ff       	jmp    1030 <.plt>

00001050 <puts@plt>:
    1050:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
    1056:	68 08 00 00 00       	push   $0x8
    105b:	e9 d0 ff ff ff       	jmp    1030 <.plt>

00001060 <__libc_start_main@plt>:
    1060:	ff a3 14 00 00 00    	jmp    *0x14(%ebx)
    1066:	68 10 00 00 00       	push   $0x10
    106b:	e9 c0 ff ff ff       	jmp    1030 <.plt>

00001070 <putchar@plt>:
    1070:	ff a3 18 00 00 00    	jmp    *0x18(%ebx)
    1076:	68 18 00 00 00       	push   $0x18
    107b:	e9 b0 ff ff ff       	jmp    1030 <.plt>

Disassembly of section .plt.got:

00001080 <__cxa_finalize@plt>:
    1080:	ff a3 20 00 00 00    	jmp    *0x20(%ebx)
    1086:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00001090 <_start>:
    1090:	f3 0f 1e fb          	endbr32 
    1094:	31 ed                	xor    %ebp,%ebp
    1096:	5e                   	pop    %esi
    1097:	89 e1                	mov    %esp,%ecx
    1099:	83 e4 f0             	and    $0xfffffff0,%esp
    109c:	50                   	push   %eax
    109d:	54                   	push   %esp
    109e:	52                   	push   %edx
    109f:	e8 22 00 00 00       	call   10c6 <_start+0x36>
    10a4:	81 c3 2c 2f 00 00    	add    $0x2f2c,%ebx
    10aa:	8d 83 20 d4 ff ff    	lea    -0x2be0(%ebx),%eax
    10b0:	50                   	push   %eax
    10b1:	8d 83 b0 d3 ff ff    	lea    -0x2c50(%ebx),%eax
    10b7:	50                   	push   %eax
    10b8:	51                   	push   %ecx
    10b9:	56                   	push   %esi
    10ba:	ff b3 28 00 00 00    	pushl  0x28(%ebx)
    10c0:	e8 9b ff ff ff       	call   1060 <__libc_start_main@plt>
    10c5:	f4                   	hlt    
    10c6:	8b 1c 24             	mov    (%esp),%ebx
    10c9:	c3                   	ret    
    10ca:	66 90                	xchg   %ax,%ax
    10cc:	66 90                	xchg   %ax,%ax
    10ce:	66 90                	xchg   %ax,%ax

000010d0 <__x86.get_pc_thunk.bx>:
    10d0:	8b 1c 24             	mov    (%esp),%ebx
    10d3:	c3                   	ret    
    10d4:	66 90                	xchg   %ax,%ax
    10d6:	66 90                	xchg   %ax,%ax
    10d8:	66 90                	xchg   %ax,%ax
    10da:	66 90                	xchg   %ax,%ax
    10dc:	66 90                	xchg   %ax,%ax
    10de:	66 90                	xchg   %ax,%ax

000010e0 <deregister_tm_clones>:
    10e0:	e8 e4 00 00 00       	call   11c9 <__x86.get_pc_thunk.dx>
    10e5:	81 c2 eb 2e 00 00    	add    $0x2eeb,%edx
    10eb:	8d 8a 3c 00 00 00    	lea    0x3c(%edx),%ecx
    10f1:	8d 82 3c 00 00 00    	lea    0x3c(%edx),%eax
    10f7:	39 c8                	cmp    %ecx,%eax
    10f9:	74 1d                	je     1118 <deregister_tm_clones+0x38>
    10fb:	8b 82 1c 00 00 00    	mov    0x1c(%edx),%eax
    1101:	85 c0                	test   %eax,%eax
    1103:	74 13                	je     1118 <deregister_tm_clones+0x38>
    1105:	55                   	push   %ebp
    1106:	89 e5                	mov    %esp,%ebp
    1108:	83 ec 14             	sub    $0x14,%esp
    110b:	51                   	push   %ecx
    110c:	ff d0                	call   *%eax
    110e:	83 c4 10             	add    $0x10,%esp
    1111:	c9                   	leave  
    1112:	c3                   	ret    
    1113:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1117:	90                   	nop
    1118:	c3                   	ret    
    1119:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00001120 <register_tm_clones>:
    1120:	e8 a4 00 00 00       	call   11c9 <__x86.get_pc_thunk.dx>
    1125:	81 c2 ab 2e 00 00    	add    $0x2eab,%edx
    112b:	55                   	push   %ebp
    112c:	89 e5                	mov    %esp,%ebp
    112e:	53                   	push   %ebx
    112f:	8d 8a 3c 00 00 00    	lea    0x3c(%edx),%ecx
    1135:	8d 82 3c 00 00 00    	lea    0x3c(%edx),%eax
    113b:	83 ec 04             	sub    $0x4,%esp
    113e:	29 c8                	sub    %ecx,%eax
    1140:	89 c3                	mov    %eax,%ebx
    1142:	c1 e8 1f             	shr    $0x1f,%eax
    1145:	c1 fb 02             	sar    $0x2,%ebx
    1148:	01 d8                	add    %ebx,%eax
    114a:	d1 f8                	sar    %eax
    114c:	74 14                	je     1162 <register_tm_clones+0x42>
    114e:	8b 92 2c 00 00 00    	mov    0x2c(%edx),%edx
    1154:	85 d2                	test   %edx,%edx
    1156:	74 0a                	je     1162 <register_tm_clones+0x42>
    1158:	83 ec 08             	sub    $0x8,%esp
    115b:	50                   	push   %eax
    115c:	51                   	push   %ecx
    115d:	ff d2                	call   *%edx
    115f:	83 c4 10             	add    $0x10,%esp
    1162:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    1165:	c9                   	leave  
    1166:	c3                   	ret    
    1167:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    116e:	66 90                	xchg   %ax,%ax

00001170 <__do_global_dtors_aux>:
    1170:	f3 0f 1e fb          	endbr32 
    1174:	55                   	push   %ebp
    1175:	89 e5                	mov    %esp,%ebp
    1177:	53                   	push   %ebx
    1178:	e8 53 ff ff ff       	call   10d0 <__x86.get_pc_thunk.bx>
    117d:	81 c3 53 2e 00 00    	add    $0x2e53,%ebx
    1183:	83 ec 04             	sub    $0x4,%esp
    1186:	80 bb 3c 00 00 00 00 	cmpb   $0x0,0x3c(%ebx)
    118d:	75 27                	jne    11b6 <__do_global_dtors_aux+0x46>
    118f:	8b 83 20 00 00 00    	mov    0x20(%ebx),%eax
    1195:	85 c0                	test   %eax,%eax
    1197:	74 11                	je     11aa <__do_global_dtors_aux+0x3a>
    1199:	83 ec 0c             	sub    $0xc,%esp
    119c:	ff b3 34 00 00 00    	pushl  0x34(%ebx)
    11a2:	e8 d9 fe ff ff       	call   1080 <__cxa_finalize@plt>
    11a7:	83 c4 10             	add    $0x10,%esp
    11aa:	e8 31 ff ff ff       	call   10e0 <deregister_tm_clones>
    11af:	c6 83 3c 00 00 00 01 	movb   $0x1,0x3c(%ebx)
    11b6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    11b9:	c9                   	leave  
    11ba:	c3                   	ret    
    11bb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    11bf:	90                   	nop

000011c0 <frame_dummy>:
    11c0:	f3 0f 1e fb          	endbr32 
    11c4:	e9 57 ff ff ff       	jmp    1120 <register_tm_clones>

000011c9 <__x86.get_pc_thunk.dx>:
    11c9:	8b 14 24             	mov    (%esp),%edx
    11cc:	c3                   	ret    

000011cd <main>:
    11cd:	8d 4c 24 04          	lea    0x4(%esp),%ecx
    11d1:	83 e4 f0             	and    $0xfffffff0,%esp
    11d4:	ff 71 fc             	pushl  -0x4(%ecx)
    11d7:	55                   	push   %ebp
    11d8:	89 e5                	mov    %esp,%ebp
    11da:	53                   	push   %ebx
    11db:	51                   	push   %ecx
    11dc:	e8 40 00 00 00       	call   1221 <__x86.get_pc_thunk.ax>
    11e1:	05 ef 2d 00 00       	add    $0x2def,%eax
    11e6:	8d 90 38 00 00 00    	lea    0x38(%eax),%edx
    11ec:	8b 12                	mov    (%edx),%edx
    11ee:	85 d2                	test   %edx,%edx
    11f0:	74 0c                	je     11fe <main+0x31>
    11f2:	8d 80 38 00 00 00    	lea    0x38(%eax),%eax
    11f8:	8b 00                	mov    (%eax),%eax
    11fa:	ff d0                	call   *%eax
    11fc:	eb 14                	jmp    1212 <main+0x45>
    11fe:	83 ec 0c             	sub    $0xc,%esp
    1201:	8d 90 38 e0 ff ff    	lea    -0x1fc8(%eax),%edx
    1207:	52                   	push   %edx
    1208:	89 c3                	mov    %eax,%ebx
    120a:	e8 41 fe ff ff       	call   1050 <puts@plt>
    120f:	83 c4 10             	add    $0x10,%esp
    1212:	b8 00 00 00 00       	mov    $0x0,%eax
    1217:	8d 65 f8             	lea    -0x8(%ebp),%esp
    121a:	59                   	pop    %ecx
    121b:	5b                   	pop    %ebx
    121c:	5d                   	pop    %ebp
    121d:	8d 61 fc             	lea    -0x4(%ecx),%esp
    1220:	c3                   	ret    

00001221 <__x86.get_pc_thunk.ax>:
    1221:	8b 04 24             	mov    (%esp),%eax
    1224:	c3                   	ret    

00001225 <do_phase>:
    1225:	55                   	push   %ebp
    1226:	89 e5                	mov    %esp,%ebp
    1228:	53                   	push   %ebx
    1229:	83 ec 24             	sub    $0x24,%esp
    122c:	e8 9f fe ff ff       	call   10d0 <__x86.get_pc_thunk.bx>
    1231:	81 c3 9f 2d 00 00    	add    $0x2d9f,%ebx
    1237:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
    123d:	89 45 f4             	mov    %eax,-0xc(%ebp)
    1240:	31 c0                	xor    %eax,%eax
    1242:	c7 45 e9 51 54 44 4c 	movl   $0x4c445451,-0x17(%ebp)
    1249:	c7 45 ed 48 57 50 4d 	movl   $0x4d505748,-0x13(%ebp)
    1250:	66 c7 45 f1 41 49    	movw   $0x4941,-0xf(%ebp)
    1256:	c6 45 f3 00          	movb   $0x0,-0xd(%ebp)
    125a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    1261:	e9 e7 00 00 00       	jmp    134d <.L30+0x19>
    1266:	8d 55 e9             	lea    -0x17(%ebp),%edx
    1269:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    126c:	01 d0                	add    %edx,%eax
    126e:	0f b6 00             	movzbl (%eax),%eax
    1271:	88 45 e3             	mov    %al,-0x1d(%ebp)
    1274:	0f be 45 e3          	movsbl -0x1d(%ebp),%eax
    1278:	83 e8 41             	sub    $0x41,%eax
    127b:	83 f8 19             	cmp    $0x19,%eax
    127e:	0f 87 b5 00 00 00    	ja     1339 <.L30+0x5>
    1284:	c1 e0 02             	shl    $0x2,%eax
    1287:	8b 84 18 ac e0 ff ff 	mov    -0x1f54(%eax,%ebx,1),%eax
    128e:	01 d8                	add    %ebx,%eax
    1290:	ff e0                	jmp    *%eax

00001292 <.L4>:
    1292:	c6 45 e3 6a          	movb   $0x6a,-0x1d(%ebp)
    1296:	e9 9e 00 00 00       	jmp    1339 <.L30+0x5>

0000129b <.L6>:
    129b:	c6 45 e3 32          	movb   $0x32,-0x1d(%ebp)
    129f:	e9 95 00 00 00       	jmp    1339 <.L30+0x5>

000012a4 <.L7>:
    12a4:	c6 45 e3 4f          	movb   $0x4f,-0x1d(%ebp)
    12a8:	e9 8c 00 00 00       	jmp    1339 <.L30+0x5>

000012ad <.L8>:
    12ad:	c6 45 e3 33          	movb   $0x33,-0x1d(%ebp)
    12b1:	e9 83 00 00 00       	jmp    1339 <.L30+0x5>

000012b6 <.L9>:
    12b6:	c6 45 e3 79          	movb   $0x79,-0x1d(%ebp)
    12ba:	eb 7d                	jmp    1339 <.L30+0x5>

000012bc <.L10>:
    12bc:	c6 45 e3 39          	movb   $0x39,-0x1d(%ebp)
    12c0:	eb 77                	jmp    1339 <.L30+0x5>

000012c2 <.L11>:
    12c2:	c6 45 e3 76          	movb   $0x76,-0x1d(%ebp)
    12c6:	eb 71                	jmp    1339 <.L30+0x5>

000012c8 <.L12>:
    12c8:	c6 45 e3 64          	movb   $0x64,-0x1d(%ebp)
    12cc:	eb 6b                	jmp    1339 <.L30+0x5>

000012ce <.L13>:
    12ce:	c6 45 e3 60          	movb   $0x60,-0x1d(%ebp)
    12d2:	eb 65                	jmp    1339 <.L30+0x5>

000012d4 <.L14>:
    12d4:	c6 45 e3 50          	movb   $0x50,-0x1d(%ebp)
    12d8:	eb 5f                	jmp    1339 <.L30+0x5>

000012da <.L15>:
    12da:	c6 45 e3 31          	movb   $0x31,-0x1d(%ebp)
    12de:	eb 59                	jmp    1339 <.L30+0x5>

000012e0 <.L16>:
    12e0:	c6 45 e3 38          	movb   $0x38,-0x1d(%ebp)
    12e4:	eb 53                	jmp    1339 <.L30+0x5>

000012e6 <.L17>:
    12e6:	c6 45 e3 48          	movb   $0x48,-0x1d(%ebp)
    12ea:	eb 4d                	jmp    1339 <.L30+0x5>

000012ec <.L18>:
    12ec:	c6 45 e3 3d          	movb   $0x3d,-0x1d(%ebp)
    12f0:	eb 47                	jmp    1339 <.L30+0x5>

000012f2 <.L19>:
    12f2:	c6 45 e3 30          	movb   $0x30,-0x1d(%ebp)
    12f6:	eb 41                	jmp    1339 <.L30+0x5>

000012f8 <.L20>:
    12f8:	c6 45 e3 70          	movb   $0x70,-0x1d(%ebp)
    12fc:	eb 3b                	jmp    1339 <.L30+0x5>

000012fe <.L21>:
    12fe:	c6 45 e3 5f          	movb   $0x5f,-0x1d(%ebp)
    1302:	eb 35                	jmp    1339 <.L30+0x5>

00001304 <.L22>:
    1304:	c6 45 e3 36          	movb   $0x36,-0x1d(%ebp)
    1308:	eb 2f                	jmp    1339 <.L30+0x5>

0000130a <.L23>:
    130a:	c6 45 e3 37          	movb   $0x37,-0x1d(%ebp)
    130e:	eb 29                	jmp    1339 <.L30+0x5>

00001310 <.L24>:
    1310:	c6 45 e3 70          	movb   $0x70,-0x1d(%ebp)
    1314:	eb 23                	jmp    1339 <.L30+0x5>

00001316 <.L25>:
    1316:	c6 45 e3 70          	movb   $0x70,-0x1d(%ebp)
    131a:	eb 1d                	jmp    1339 <.L30+0x5>

0000131c <.L26>:
    131c:	c6 45 e3 75          	movb   $0x75,-0x1d(%ebp)
    1320:	eb 17                	jmp    1339 <.L30+0x5>

00001322 <.L27>:
    1322:	c6 45 e3 35          	movb   $0x35,-0x1d(%ebp)
    1326:	eb 11                	jmp    1339 <.L30+0x5>

00001328 <.L28>:
    1328:	c6 45 e3 56          	movb   $0x56,-0x1d(%ebp)
    132c:	eb 0b                	jmp    1339 <.L30+0x5>

0000132e <.L29>:
    132e:	c6 45 e3 34          	movb   $0x34,-0x1d(%ebp)
    1332:	eb 05                	jmp    1339 <.L30+0x5>

00001334 <.L30>:
    1334:	c6 45 e3 5d          	movb   $0x5d,-0x1d(%ebp)
    1338:	90                   	nop
    1339:	0f be 45 e3          	movsbl -0x1d(%ebp),%eax
    133d:	83 ec 0c             	sub    $0xc,%esp
    1340:	50                   	push   %eax
    1341:	e8 2a fd ff ff       	call   1070 <putchar@plt>
    1346:	83 c4 10             	add    $0x10,%esp
    1349:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
    134d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    1350:	83 f8 09             	cmp    $0x9,%eax
    1353:	0f 86 0d ff ff ff    	jbe    1266 <do_phase+0x41>
    1359:	83 ec 0c             	sub    $0xc,%esp
    135c:	6a 0a                	push   $0xa
    135e:	e8 0d fd ff ff       	call   1070 <putchar@plt>
    1363:	83 c4 10             	add    $0x10,%esp
    1366:	90                   	nop
    1367:	8b 45 f4             	mov    -0xc(%ebp),%eax
    136a:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
    1371:	74 05                	je     1378 <.L30+0x44>
    1373:	e8 88 00 00 00       	call   1400 <__stack_chk_fail_local>
    1378:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    137b:	c9                   	leave  
    137c:	c3                   	ret    
    137d:	66 90                	xchg   %ax,%ax
    137f:	90                   	nop

00001380 <__libc_csu_init>:
    1380:	f3 0f 1e fb          	endbr32 
    1384:	55                   	push   %ebp
    1385:	e8 6b 00 00 00       	call   13f5 <__x86.get_pc_thunk.bp>
    138a:	81 c5 46 2c 00 00    	add    $0x2c46,%ebp
    1390:	57                   	push   %edi
    1391:	56                   	push   %esi
    1392:	53                   	push   %ebx
    1393:	83 ec 0c             	sub    $0xc,%esp
    1396:	89 eb                	mov    %ebp,%ebx
    1398:	8b 7c 24 28          	mov    0x28(%esp),%edi
    139c:	e8 5f fc ff ff       	call   1000 <_init>
    13a1:	8d 9d 04 ff ff ff    	lea    -0xfc(%ebp),%ebx
    13a7:	8d 85 00 ff ff ff    	lea    -0x100(%ebp),%eax
    13ad:	29 c3                	sub    %eax,%ebx
    13af:	c1 fb 02             	sar    $0x2,%ebx
    13b2:	74 29                	je     13dd <__libc_csu_init+0x5d>
    13b4:	31 f6                	xor    %esi,%esi
    13b6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    13bd:	8d 76 00             	lea    0x0(%esi),%esi
    13c0:	83 ec 04             	sub    $0x4,%esp
    13c3:	57                   	push   %edi
    13c4:	ff 74 24 2c          	pushl  0x2c(%esp)
    13c8:	ff 74 24 2c          	pushl  0x2c(%esp)
    13cc:	ff 94 b5 00 ff ff ff 	call   *-0x100(%ebp,%esi,4)
    13d3:	83 c6 01             	add    $0x1,%esi
    13d6:	83 c4 10             	add    $0x10,%esp
    13d9:	39 f3                	cmp    %esi,%ebx
    13db:	75 e3                	jne    13c0 <__libc_csu_init+0x40>
    13dd:	83 c4 0c             	add    $0xc,%esp
    13e0:	5b                   	pop    %ebx
    13e1:	5e                   	pop    %esi
    13e2:	5f                   	pop    %edi
    13e3:	5d                   	pop    %ebp
    13e4:	c3                   	ret    
    13e5:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    13ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000013f0 <__libc_csu_fini>:
    13f0:	f3 0f 1e fb          	endbr32 
    13f4:	c3                   	ret    

000013f5 <__x86.get_pc_thunk.bp>:
    13f5:	8b 2c 24             	mov    (%esp),%ebp
    13f8:	c3                   	ret    
    13f9:	66 90                	xchg   %ax,%ax
    13fb:	66 90                	xchg   %ax,%ax
    13fd:	66 90                	xchg   %ax,%ax
    13ff:	90                   	nop

00001400 <__stack_chk_fail_local>:
    1400:	f3 0f 1e fb          	endbr32 
    1404:	53                   	push   %ebx
    1405:	e8 c6 fc ff ff       	call   10d0 <__x86.get_pc_thunk.bx>
    140a:	81 c3 c6 2b 00 00    	add    $0x2bc6,%ebx
    1410:	83 ec 08             	sub    $0x8,%esp
    1413:	e8 28 fc ff ff       	call   1040 <__stack_chk_fail@plt>

Disassembly of section .fini:

00001418 <_fini>:
    1418:	f3 0f 1e fb          	endbr32 
    141c:	53                   	push   %ebx
    141d:	83 ec 08             	sub    $0x8,%esp
    1420:	e8 ab fc ff ff       	call   10d0 <__x86.get_pc_thunk.bx>
    1425:	81 c3 ab 2b 00 00    	add    $0x2bab,%ebx
    142b:	83 c4 08             	add    $0x8,%esp
    142e:	5b                   	pop    %ebx
    142f:	c3                   	ret    
